type Customer @collection(name: "customers") {
  auth0_id: String
  user_id: String
  user_id_withauth0: String
  name: String
  nickname: String
  email: String
  email_verified: String
  picture_url: String
  global_client_id: String
  connection: String
  is_social: String
  client_id: String
  provider: String
  favoriteproducts: [Product] @relation
  favoritepurveyors: [Purveyor] @relation
  favoriterecipes: [Recipe] @relation
  cl_orders: [CLOrder] @relation
  created_at: String
  updated_at: String
  chec_orders: [ChecOrder] @relation
}

type Purveyor @collection(name: "purveyors") {
  datocms_id: String!
  name: String
  checId: String!
  checPublicKey: String!
  checSecretKey: String!
  checSandboxPublicKey: String!
  checSandboxSecretKey: String!
  customers: [Customer] @relation
}

type Product @collection(name: "products") {
  datocms_id: String!
  chec_product_id: String
  name: String
  sku: String
  price: Int
  description: String
  datocms_purveyor_id: String
  product_measurement: String
  product_variant: String
  dietary_tag: String
  cl_id: String
  customers: [Customer] @relation
}

type Recipe @collection(name: "recipes") {
  datocmsId: String!
  name: String
  datocmsPurveyorId: String!
  customers: [Customer] @relation
}

type CLOrderAttribute @embedded {
  number: Int
  status: String
  payment_status: String
  fulfillment_status: String
  guest: Boolean
  editable: Boolean
  placeable: Boolean
  customer_email: String
  language_code: String
  currency_code: String
  tax_included: Boolean
  tax_rate: String
  freight_taxable: String
  requires_billing_info: Boolean
  country_code: String
  shipping_country_code_lock: String
  coupon_code: String
  gift_card_code: String
  gift_card_or_coupon_code: String
  subtotal_amount_cents: Int
  subtotal_amount_float: Float
  formatted_subtotal_amount: String
  shipping_amount_cents: Int
  shipping_amount_float: Float
  formatted_shipping_amount: String
  payment_method_amount_cents: Int
  payment_method_amount_float: Float
  formatted_payment_method_amount: String
  discount_amount_cents: Int
  discount_amount_float: Float
  formatted_discount_amount: String
  adjustment_amount_cents: Int
  adjustment_amount_float: Float
  formatted_adjustment_amount: String
  gift_card_amount_cents: Int
  gift_card_amount_float: Float
  formatted_gift_card_amount: String
  total_tax_amount_cents: Int
  total_tax_amount_float: Float
  formatted_total_tax_amount: String
  subtotal_tax_amount_cents: Int
  subtotal_tax_amount_float: Float
  formatted_subtotal_tax_amount: String
  shipping_tax_amount_cents: Int
  shipping_tax_amount_float: Float
  formatted_shipping_tax_amount: String
  payment_method_tax_amount_cents: Int
  payment_method_tax_amount_float: Float
  formatted_payment_method_tax_amount: String
  adjustment_tax_amount_cents: Int
  adjustment_tax_amount_float: Float
  formatted_adjustment_tax_amount: String
  total_amount_cents: Int
  total_amount_float: Float
  formatted_total_amount: String
  total_taxable_amount_cents: Int
  total_taxable_amount_float: Float
  formatted_total_taxable_amount: String
  subtotal_taxable_amount_cents: Int
  subtotal_taxable_amount_float: Float
  formatted_subtotal_taxable_amount: String
  shipping_taxable_amount_cents: Int
  shipping_taxable_amount_float: Float
  formatted_shipping_taxable_amount: String
  payment_method_taxable_amount_cents: Int
  payment_method_taxable_amount_float: Float
  formatted_payment_method_taxable_amount: String
  adjustment_taxable_amount_cents: Int
  adjustment_taxable_amount_float: Float
  formatted_adjustment_taxable_amount: String
  total_amount_with_taxes_cents: Int
  total_amount_with_taxes_float: Float
  formatted_total_amount_with_taxes: String
  fees_amount_cents: Int
  fees_amount_float: Float
  formatted_fees_amount: String
  authorization_amount_cents: Int
  authorization_amount_float: Float
  formatted_authorization_amount: String
  authorization_balance_cents: Int
  authorization_balance_float: Float
  formatted_authorization_balance: String
  skus_count: Int
  line_item_options_count: Int
  shipments_count: Int
  payment_source_details: String
  token: String
  cart_url: String
  return_url: String
  terms_url: String
  privacy_url: String
  checkout_url: String
  placed_at: String
  approved_at: String
  cancelled_at: String
  payment_updated_at: String
  fulfillment_updated_at: String
  created_at: String
  updated_at: String
  reference: String
  reference_origin: String
}

type CLAddress @embedded {
  first_name: String
  last_name: String
  company: String
  email: String
  phone: String
  line_1: String
  line_2: String
  city: String
  state_code: String
  country_code: String
  zip_code: String
  lat: String
  lng: String
  cl_order: CLOrderSKU
}

type CLOrderSKU @embedded {
  product: Product
  cl_order: CLOrder @relation
  sku: String
  quantity: Int
  created_at: String
  updated_at: String
}

type CLOrder @collection(name: "clorders") {
  cl_order_id: String
  customer: Customer @relation
  attributes: CLOrderAttribute
  items: [CLOrderSKU]
  shipping: CLAddress
  billing: CLAddress
  chec_orders: [ChecOrder] @relation
  created_at: Int
}

type ResponsePaylod @embedded {
  message: String
}

type CustomerFavoriteProductPaylod @embedded {
  message: String
  favoriteProducts: [FavoriteProduct]
}

type CustomerProfilePayload @embedded {
  customer: CustomerProfile
  favoriteproducts: [FavoriteProduct]
  favoritepurveyors: [FavoritePurveyor]
}

type CustomerProfile @embedded {
  auth0_id: String
  user_id: String
  user_id_withauth0: String
  name: String
  nickname: String
  email: String
  email_verified: String
  picture_url: String
  global_client_id: String
  connection: String
  is_social: String
  client_id: String
  provider: String
  created_at: String
  updated_at: String
}

type FavoriteProduct @embedded {
  datocms_id: String!
  chec_product_id: String
  name: String
  sku: String
  price: Int
  description: String
  datocms_purveyor_id: String
  product_measurement: String
  product_variant: String
  dietary_tag: String
  cl_id: String
}

type FavoritePurveyor @embedded {
  datocms_id: String!
  name: String
}

type CLOrderSKUsOutput @embedded {
  sku: String
  name: String
  pieces_per_pack: String
  reference: String
}

type clorderSkusPayload @embedded {
  data: [SkuPurveyor]
}

type SkuPurveyor @embedded {
  data: [CLOrderSKUsOutput]
}

type ChecOrderAttribute @embedded {
  cart_id: String!
  created: Int
  customer_reference: String!
  status_payment: String!
  status_fulfillment: String!
  customer_email: String!
  customer_firstname: String!
  customer_lastname: String
  currency_code: String!
  currency_symbol: String!
  subtotal_raw: Int
  subtotal_formatted: String
  shipping_price_raw: Int
  shipping_price_formatted: String
  tax_raw: Int
  tax_formatted: String
  tax_included_in_price: Boolean
  total_raw: Int
  total_formatted: String
  total_with_tax_raw: Int
  total_with_tax_formatted: String
  total_paid_raw: Int
  total_paid_formatted: String
}

type ChecOrder @collection(name: "checorders") {
  chec_order_id: String!
  purveyor: Purveyor
  attributes: ChecOrderAttribute
  cl_order: CLOrder @relation
  items: [ChecOrderSKU]
  customer: Customer @relation
  created_at: Int
}

type ChecOrderSKU @embedded {
  chec_order_item_id: String!
  chec_product_id: String!
  chec_product_name: String!
  type: String!
  sku: String!
  quantity: Int
  price_raw: Int
  price_formatted: String
  tax_is_taxable: Boolean
  taxable_amount_raw: Int
  taxable_amount_formatted: String
  tax_amount_raw: Int
  tax_amount_formatted: String
  line_total_raw: Int
  line_total_formatted: String
  line_total_with_tax_raw: Int
  line_total_with_tax_formatted: String
  product: Product
  checOrder: ChecOrder @relation
}

# INPUT

input CLOrderAttributeInput {
  number: Int
  status: String
  payment_status: String
  fulfillment_status: String
  guest: Boolean
  editable: Boolean
  placeable: Boolean
  customer_email: String
  language_code: String
  currency_code: String
  tax_included: Boolean
  tax_rate: String
  freight_taxable: String
  requires_billing_info: Boolean
  country_code: String
  shipping_country_code_lock: String
  coupon_code: String
  gift_card_code: String
  gift_card_or_coupon_code: String
  subtotal_amount_cents: Int
  subtotal_amount_float: Float
  formatted_subtotal_amount: String
  shipping_amount_cents: Int
  shipping_amount_float: Float
  formatted_shipping_amount: String
  payment_method_amount_cents: Int
  payment_method_amount_float: Float
  formatted_payment_method_amount: String
  discount_amount_cents: Int
  discount_amount_float: Float
  formatted_discount_amount: String
  adjustment_amount_cents: Int
  adjustment_amount_float: Float
  formatted_adjustment_amount: String
  gift_card_amount_cents: Int
  gift_card_amount_float: Float
  formatted_gift_card_amount: String
  total_tax_amount_cents: Int
  total_tax_amount_float: Float
  formatted_total_tax_amount: String
  subtotal_tax_amount_cents: Int
  subtotal_tax_amount_float: Float
  formatted_subtotal_tax_amount: String
  shipping_tax_amount_cents: Int
  shipping_tax_amount_float: Float
  formatted_shipping_tax_amount: String
  payment_method_tax_amount_cents: Int
  payment_method_tax_amount_float: Float
  formatted_payment_method_tax_amount: String
  adjustment_tax_amount_cents: Int
  adjustment_tax_amount_float: Float
  formatted_adjustment_tax_amount: String
  total_amount_cents: Int
  total_amount_float: Float
  formatted_total_amount: String
  total_taxable_amount_cents: Int
  total_taxable_amount_float: Float
  formatted_total_taxable_amount: String
  subtotal_taxable_amount_cents: Int
  subtotal_taxable_amount_float: Float
  formatted_subtotal_taxable_amount: String
  shipping_taxable_amount_cents: Int
  shipping_taxable_amount_float: Float
  formatted_shipping_taxable_amount: String
  payment_method_taxable_amount_cents: Int
  payment_method_taxable_amount_float: Float
  formatted_payment_method_taxable_amount: String
  adjustment_taxable_amount_cents: Int
  adjustment_taxable_amount_float: Float
  formatted_adjustment_taxable_amount: String
  total_amount_with_taxes_cents: Int
  total_amount_with_taxes_float: Float
  formatted_total_amount_with_taxes: String
  fees_amount_cents: Int
  fees_amount_float: Float
  formatted_fees_amount: String
  authorization_amount_cents: Int
  authorization_amount_float: Float
  formatted_authorization_amount: String
  authorization_balance_cents: Int
  authorization_balance_float: Float
  formatted_authorization_balance: String
  skus_count: Int
  line_item_options_count: Int
  shipments_count: Int
  payment_source_details: String
  token: String
  cart_url: String
  return_url: String
  terms_url: String
  privacy_url: String
  checkout_url: String
  placed_at: String
  approved_at: String
  cancelled_at: String
  payment_updated_at: String
  fulfillment_updated_at: String
  created_at: String
  updated_at: String
  reference: String
  reference_origin: String
}

# input CLOrderSKUsInput {
#   # order: CLOrderInput
#   code: String
#   name: String
#   description: String
#   image_url: String
#   pieces_per_pack: String
#   weight: Int
#   unit_of_weight: String
#   hs_tariff_number: String
#   created_at: String
#   updated_at: String
#   reference: String
#   reference_origin: String
# }

# input CLOrderInput {
#    orderId: String!
#    attributes: CLOrderAttributeInput!
# }

input CLOrderSKUInput {
  sku: String
  quantity: Int
  created_at: String
  updated_at: String
}

input CLAddressInput {
  first_name: String
  last_name: String
  company: String
  email: String
  phone: String
  line_1: String
  line_2: String
  city: String
  state_code: String
  country_code: String
  zip_code: String
  lat: String
  lng: String
}

input ChecOrderAttributeInput {
  cart_id: String!
  created: Int
  customer_reference: String!
  status_payment: String!
  status_fulfillment: String!
  customer_email: String!
  customer_firstname: String!
  customer_lastname: String
  currency_code: String!
  currency_symbol: String!
  subtotal_raw: Int
  subtotal_formatted: String
  shipping_price_raw: Int
  shipping_price_formatted: String
  tax_raw: Int
  tax_formatted: String
  tax_included_in_price: Boolean
  total_raw: Int
  total_formatted: String
  total_with_tax_raw: Int
  total_with_tax_formatted: String
  total_paid_raw: Int
  total_paid_formatted: String
}

input ChecOrderSKUInput {
  chec_order_item_id: String!
  chec_product_id: String!
  chec_product_name: String!
  type: String!
  sku: String!
  quantity: Int
  price_raw: Int
  price_formatted: String
  tax_is_taxable: Boolean
  taxable_amount_raw: Int
  taxable_amount_formatted: String
  tax_amount_raw: Int
  tax_amount_formatted: String
  line_total_raw: Int
  line_total_formatted: String
  line_total_with_tax_raw: Int
  line_total_with_tax_formatted: String
}

# END OF INPUT

type Query {
  allOrders: [CLOrder!]
  clorderByOrderId(cl_order_id: String): [CLOrder!]
  allPurveyors: [Purveyor!]
  purveyorByChecId(checId: String!): [Purveyor!]
    @resolver(name: "purveyorByChecId", paginated: false)
  clorderSkusByPurveyor(orderId: String!): clorderSkusPayload!
    @resolver(name: "getSkusByPurveyor", paginated: false)
  purveyorByDatocmsId(datocmsId: String!): [Purveyor!]
    @resolver(name: "purveyorByDatocmsId", paginated: false)
  customerByEmail(email: String!): [Customer!]
    @resolver(name: "customerByEmail", paginated: false)
  customerProfileByAuth0(auth0: String!): CustomerProfilePayload
    @resolver(name: "customerProfile", paginated: false)
}

type Mutation {
  #  addCLOrder(orderId: String!, attributes: CLOrderAttributeInput!): CLOrder! @resolver
  createCLOrder(
    cl_order_id: String!
    email: String!
    attributes: CLOrderAttributeInput!
    items: [CLOrderSKUInput!]
    shipping: CLAddressInput
    billing: CLAddressInput
  ): CLOrder! @resolver
  createChecOrder(
    chec_order_id: String!
    chec_id: String!
    cl_order_id: String
    email: String!
    attributes: ChecOrderAttributeInput!
    items: [ChecOrderSKUInput!]
  ): ChecOrder! @resolver
  #updateCLOrder(orderId: String!, attributes: CLOrderAttributeInput, items: [CLOrderSKUsInput]): CLOrder! @resolver
  updatePurveyor(
    datocms_id: String!
    name: String
    checSecretKey: String
    checSandboxSecretKey: String
    checPublicKey: String
    checSandboxPublicKey: String
    checId: String
  ): Purveyor! @resolver
  productUpdateByDatocmsId(
    datocms_id: String!
    name: String
    product_measurement: String
    sku: String
    dietary_tag: String
    product_variant: String
    description: String
    price: String
    datocms_purveyor_id: String
  ): Product! @resolver
  updateFavouriteProduct(auth0: String!, sku: String!): CustomerFavoriteProductPaylod
    @resolver(name: "favouriteproduct", paginated: false)
  updateFavouritePurveyor(
    auth0: String!
    purveyorDatocmsId: String!
  ): ResponsePaylod @resolver(name: "favouritepurveyor", paginated: false)
  updateFavouriteRecipe(
    auth0: String!
    recipeDatocmsId: String!
  ): ResponsePaylod @resolver(name: "favouriterecipe", paginated: false)
}

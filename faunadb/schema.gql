# User Collections

type User @collection(name: "users") {
  auth0_client_id: String
  auth0_created_at: String
  auth0_email: String @unique
  auth0_email_verified: String
  auth0_global_client_id: String
  auth0_id: String
  auth0_identities0_connection: String
  auth0_identities0_issocial: String
  auth0_identities0_provider: String
  auth0_identities0_user_id: String
  auth0_name: String
  auth0_nickname: String
  auth0_picture: String
  auth0_updated_at: String
  auth0_user_id: String
  auth0_user_type: UserType
  purveyor_profile: PurveyorProfile @relation
  favorite_products: [Product] @relation(name: "user_favorite_products")
  favorite_purveyors: [PurveyorProfile] @relation(name: "user_favorite_purveyors")
  favorite_recipes: [Recipe] @relation(name: "user_favorite_recipes")
  created_at: String
}

type PurveyorProfile @collection(name: "purveyorprofiles") {
  providore_purveyor_id: Int!
  user: User! @relation
  datocms_merchant_name: String
  datocms_id: Int!
  datocms_slug: String
  datocms_tag_line: String
  datocms_featured_image_url: String
  datocms_location_lat: String
  datocms_location_long: String
  datocms_location_display_name: String
  datocms_featured_product: [Product]
  datocms_major_categories: [Int]
  datocms_bio: String
  favoritedby_users: [User] @relation(name: "user_favorite_purveyors")
}

# Product Collections

type Product @collection(name: "products") {
  datocms_id: String!
  datocms_name: String
  datocms_price: Float
  datocms_description: String
  datocms_product_measurement: String
  datocms_product_variant: String
  datocms_dietary_tag: String
  cl_id: String
  cl_sku: String
  users: [User] @relation(name: "user_favorite_products")
  purveyor_profile: PurveyorProfile @relation
  product_options: [ProductOption] @relation
  created_at: String
}

type ProductOption @collection(name: "productoptions") {
  datocms_product_option_id: String!
  datocms_display_name: String
  datocms_product_variant_sku: String
  datocms_variant_combination: [ProductVariantCombination]
  product: Product @relation
  created_at: String
}

type ProductVariantCombination @embedded {
  datocms_variant_type: VariantType!
  datocms_variant_value: VariantValue!
  datocms_product_option: ProductOption @relation
}

type VariantType @embedded {
  datocms_id: String!
  datocms_name: String!
}

type VariantValue @embedded {
  datocms_id: String!
  datocms_display_name: String
  datocms_value: String!
}

# Recipe Collections

type Recipe @collection(name: "recipes") {
  datocms_id: String!
  datocms_main_category_id: String
  datocms_sub_categories: [String]
  datocms_tags: [String]
  datocms_methods: [String]
  datocms_name: String
  datocms_featured_image_url: String
  datocms_duration: Int
  datocms_difficulty: String
  datocms_taste: String
  datocms_summary: String
  datocms_authors_tip: String
  datocms_is_trending: String
  purveyor_profile: PurveyorProfile
  favoritedby_users: [User] @relation(name: "user_favorite_recipes")
  created_at: String
}

# Custom Payloads

type UserFavoriteProductPaylod @embedded {
  message: String
  favoriteProducts: [FavoriteProduct]
}

type FavoriteProduct @embedded {
  datocms_id: String!
  name: String
  sku: String
  price: Int
  description: String
  datocms_purveyor_id: String
  product_measurement: String
  product_variant: String
  dietary_tag: String
  cl_id: String
}

type UserFavoritePurveyorPaylod @embedded {
  message: String
  favoritePurveyors: [FavoritePurveyor]
}

type FavoritePurveyor @embedded {
  datocms_id: String!
  name: String
}

type UserFavoriteRecipePaylod @embedded {
  message: String
  favoriteRecipes: [FavoriteRecipe]
}

type FavoriteRecipe @embedded {
  datocms_id: String
  datocms_purveyor_id: String
  datocms_main_category_id: String
  datocms_sub_categories: [String]
  datocms_tags: [String]
  datocms_methods: [String]
  name: String
  featured_image: String
  duration: Int
  difficulty: String
  taste: String
  summary: String
  authors_tip: String
  is_trending: String
}

#Enums

enum UserType {
  CUSTOMER
  PURVEYOR
} 

# Inputs

# Queries

type Query {
  allUsers: [User!]
  # used to get user record by email address. used in create customer logic app, previous name -> customerByEmail
  getUserByEmail(email: String!): [User]! @resolver(name: "getUserByEmail", paginated: false)
  # used to get user's profile in nextjs app, previous name -> customerProfileByAuth0. used in get customer logic app
  getUserByAuth0(auth0: String!): User @resolver(name: "getUserByAuth0", paginated: false)
  allPurveyors: [User!]
  purveyorByChecId(checId: String!): [User!]
    @resolver(name: "purveyorByChecId", paginated: false)
  purveyorByDatocmsId(datocmsId: String!): [User!]
    @resolver(name: "purveyorByDatocmsId", paginated: false)
  recipeByDatocmsId(datocmsId: String!): [Recipe!]
    @resolver(name: "recipeByDatocmsId", paginated: false)
}

# Functions

type Mutation {
  updatePurveyor(
    providore_purveyor_id: Int!
    datocms_merchant_name: String
    datocms_id: Int!
    datocms_slug: String
    datocms_tag_line: String
    datocms_featured_image_url: String
    datocms_location_lat: String
    datocms_location_long: String
    datocms_location_display_name: String
    datocms_major_categories: [Int]
    datocms_bio: String
  ): PurveyorProfile! @resolver

  updateProduct(
    datocms_id: String!
    datocms_name: String
    datocms_price: Float
    datocms_description: String
    datocms_product_measurement: String
    datocms_product_unit: String
    datocms_dietary_tag: String
    datocms_purveyor_id: String
    datocms_slug: String
    datocms_product_options: [Int]
    cl_id: String
    cl_sku: String
  ): Product! @resolver

  updateFavouriteProduct(
    auth0: String!
    sku: String!
  ): UserFavoriteProductPaylod
    @resolver(name: "favouriteproduct", paginated: false)

  updateFavouritePurveyor(
    auth0: String!
    purveyorDatocmsId: String!
  ): UserFavoritePurveyorPaylod
    @resolver(name: "favouritepurveyor", paginated: false)

  updateFavouriteRecipe(
    auth0: String!
    recipeDatocmsId: String!
  ): UserFavoriteRecipePaylod
    @resolver(name: "favouriterecipe", paginated: false)

  updateRecipe(
    datocms_id: String!
    datocms_purveyor_id: String
    datocms_main_category_id: String
    datocms_sub_categories: [String]
    datocms_tags: [String]
    datocms_methods: [String]
    name: String
    duration: String
    authors_tip: String
    difficulty: String
    featured_image: String
    is_trending: String
    summary: String
  ): Recipe! @resolver
}
